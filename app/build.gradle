apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.administrator.demo_shoppingcar"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //版本冲突的解决
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '27.1.1'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //ButterKnife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //gson等第一次导入的依赖
    implementation 'com.google.code.gson:gson:2.8.5'

    //1 如果使用OKHttp了，就将以前的依赖使用下面的依赖替换掉，下面的依赖会自带拦截器：
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'

    //Fresco,无论使用哪个模块的功能,都必须要添加的基础依赖
    //需要在Application中全局初始化
    implementation 'com.facebook.fresco:fresco:0.14.1'

    //注意CardView只能有一个最大的子类
    //卡片式布局 简单使用属性 x
    // mlns:app="http://schemas.android.com/apk/res-auto"
    // android:orientation="vertical"app:cardCornerRadius="20dp"app:cardElevation="10dp"
    // android:layout_width="200dp"android:layout_height="240dp"
    implementation 'com.android.support:cardview-v7:27.1.1' //gradle导入CardView

    //注意  使用最新的依赖  导包的时候,导的是io包下的观察者和订阅者
    //1.它会自动引用基础库与Android库
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'
    //2.注意使用线程调度器时,在网络请求工具类中使用的Rxjava+Retrofit的依赖是最新的2.x.y,可以去GitHub中去查找最新的:
    //retrofit and rxjava
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    //XrecyclerView的依赖
    implementation 'com.jcodecraeer:xrecyclerview:1.3.2'
     //我的工具类
    implementation 'com.github.ZhangZiLiX:Utils:1.0'
    implementation 'com.github.ZhangZiLiX:AddAndSubStractorUtils:1.0'
    //1 Glide引入两句话（在build.gradle（Module……）中引入）
    //注意：使用Glide需要在Project的build.gradle中 repositories{}添加 mavenCentral()
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'


}
